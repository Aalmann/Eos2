#<Type> "." <Maske nach der gesucht wird> "=" ("@" Methode | "%" Attribut | "!" Klasse | "$" Privates Attribut) <Template>  "#" <Erkl�render Text>
class.Boolean             = !Boolean#Ein Wahrheitswert.
class.Farbe               = !Farbe#Eine Farbe.
class.Real                = !Real#Eine Kommazahl. zB 6.17 (Punkt statt Komma!). 
class.Integer             = !Integer#Eine ganze Zahl
class.Dreieck             = !Dreieck#Ein Dreieck.
class.Textfeld            = !Textfeld#Ein beschriftbares Rechteck.
class.Grafik              = !Grafik#Ein Bild in einem Rechteck.
class.Quadrat             = !Quadrat#Ein Quadrat.
class.Rechteck            = !Rechteck#Ein Rechteck.
class.Zeichenkette        = !Zeichenkette#Ein Text.
class.Turtle              = !Turtle#Ein steuerbarer Zeichenstift.
class.Linie               = !Linie#Eine Linie.
class.Gruppe              = !Gruppe#Eine Gruppe von mehreren Figuren.
class.Ellipse             = !Ellipse#Eine Ellipse.
class.Kreis               = !Kreis#Ein Kreis.
class.Fenster             = !Fenster#Ein Fenster.

triangle.eckensetzen         = @eckenSetzen(x1,y1,x2,y2,x3,y3)#eckenSetzen(x1:Zahl,y1:Zahl,x2:Zahl,y2:Zahl,x3:Zahl,y3:Zahl)<br>Setzt alle drei Ecken des Dreiecks.
triangle.spiegelex           = @spiegeleX()#spiegeleX()<br>Spiegelt das Dreieck an der y-Achse.
triangle.spiegeley           = @spiegeleY()#spiegeleY()<br>Spiegelt das Dreieck an der x-Achse.
triangle.a                   = $a#a:Punkt<br>Ecke des Dreiecks.
triangle.b                   = $b#b:Punkt<br>Ecke des Dreiecks.
triangle.c                   = $c#c:Punkt<br>Ecke des Dreiecks.

ellipse.mitteysetzen        = @mitteYSetzen(y)#mitteYSetzen(y:Zahl)<br>Setzt die y-Koordinate des Mittelpunktes.
ellipse.mittexsetzen        = @mitteXSetzen(x)#mitteXSetzen(x:Zahl)<br>Setzt die x-Koordinate des Mittelpunktes.
ellipse.radiusysetzen       = @radiusYSetzen(y)#radiusYSetzen(y:Zahl)<br>Setzt den vertikalen Radius.
ellipse.radiusxsetzen       = @radiusXSetzen(x)#radiusXSetzen(x:Zahl)<br>Setzt den waagerechten Radius.
ellipse.mittelpunktsetzen   = @mittelpunktSetzen(x,y)#mittelpunktSetzen(x:Zahl,y:Zahl)<br>Setzt den Mittelpunkt.
ellipse.mitteylesen         = @mitteYLesen()#mitteYLesen():Zahl<br>Gibt die y-Koordinate des Mittelpunktes zur�ck.
ellipse.mittexlesen         = @mitteXLesen()#mitteXLesen():Zahl<br>Gibt die x-Koordinate des Mittelpunktes zur�ck.
ellipse.radiusylesen        = @radiusYLesen()#radiusYLesen():Zahl<br>Gibt den vertikalen Radius zur�ck.
ellipse.radiusxlesen        = @radiusXLesen()#radiusXLesen():Zahl<br>Gibt den waagerechten Radius zur�ck.
ellipse.mittex              = %mitteX#mitteX:Zahl<br>Die x-Koordinate des Mittelpunktes.
ellipse.mittey              = %mitteY#mitteY:Zahl<br>Die y-Koordinate des Mittelpunktes.
ellipse.radiusx             = %radiusX#radiusX:Zahl<br>Der waagerechte Radius der Ellipse.
ellipse.radiusy             = %radiusY#radiusY:Zahl<br>Der vertikale Radius der Ellipse.

window.gitterfarbesetzen   = @gitterFarbeSetzen(farbe)#gitterFarbeSetzen(farbe:Farbe)<br>Setzt die Farbe des Koordiantengitters.
window.hintergrundfarbesetzen = @hintergrundFarbeSetzen(farbe)#hintergrundFarbeSetzen(farbe:Farbe)<br>Setzt die Farbe des Hintergrunds.
window.h\u00f6hesetzen     = @h\u00f6heSetzen(h\u00f6he)#h\u00f6heSetzen(h\u00f6he:Zahl)<br>Setzt die H\u00f6he des Fensters.
window.breitesetzen        = @breiteSetzen(breite)#breiteSetzen(breite:Zahl)<br>Setzt die Breite des Fensters.
window.obensetzen          = @obenSetzen(oben)#obenSetzen(oben:Zahl)<br>Setzt den oberen Abstand zum Bildschirmrand.
window.linkssetzen         = @linksSetzen(links)#linksSetzen(links:Zahl)<br>Setzt den linken Abstand zum Bildschirmrand.
window.namesetzen          = @nameSetzen(name)#nameSetzen(name:Zeichenkette)<br>Setzt den Titel des Fensters.
window.strichabstandsetzen = @strichAbstandSetzen(abstand)#strichAbstandSetzen(abstand:Zahl)<br>Setzt den Gitterabstand des Koordinatensystems.
window.verschiebe          = @verschiebe(dx,dy)#verschiebe(dx:Zahl,dy:Zahl)<br>Verschiebt das Fenster.
window.gitterein           = @gitterEin()#gitterEin()<br>Macht das Koordinatensystem sichtbar.
window.gitteraus           = @gitterAus()#gitterAus()<br>Macht das Koordinatensystem unsichtbar.
window.gitterfarbelesen    = @gitterFarbeLesen()#gitterFarbeLesen():Farbe<br>Gibt die Farbe des Koordinatensystems zur�ck.
window.hintergrundfarbelesen = @hintergrundFarbeLesen()#hintergrundFarbeLesen():Farbe<br>Gibt die Farbe des Hintergrunds zur�ck.
window.h\u00f6helesen      = @h\u00f6heLesen()#h\u00f6heLesen():Zahl<br>Gibt die H\u00f6he des Fensters zur�ck.
window.breitelesen         = @breiteLesen()#breiteLesen():Zahl<br>Gibt die Breite des Fensters zur�ck.
window.obenlesen           = @obenLesen()#obenLesen():Zahl<br>Gibt den Abstand des Fenster vom oberen Bildschirmrand zur�ck.
window.linkslesen          = @linksLesen()#linksLesen():Zahl<br>Gibt den Abstand des Fenster vom linken Bildschirmrand zur�ck.
window.namelesen           = @nameLesen()#nameLesen():Zeichenkette<br>Gibt den Titel des Fensters zur�ck.
window.strichabstandlesen  = @strichAbstandLesen()#strichAbstandLesen():Zahl<br>Gibt den Gitterabstand des Koordinatensystems zur�ck.
window.zeichne             = @zeichne(figur)#zeichen(figur:Figur)<br>Setzt eine Figur in ein Fenster.
window.gitterfarbe         = %gitterFarbe#gitterFarbe:Farbe<br>Die Farbe des Koordinatensystems.
window.hintergrundfarbe    = %hintergrundFarbe#hintergrundFarbe:Farbe<br>Die Hintergrundfarbe des Fensters.
window.h\u00f6he           = %h\u00f6he#h\u00f6he:Zahl<br>H\u00f6he des Fensters.
window.breite              = %breite#breite:Zahl<br>Breite des Fensters.
window.oben                = %oben#oben:Zahl<br>Oberer Abstand des Fensters zum Bildschirmrand.
window.links               = %links#links:Zahl<br>Linker Abstand des Fensters zum Bildschirmrand.
window.name                = %name#name:Zeichenkette<br>Titel des Fensters.
window.strichabstand       = %strichAbstand#strichAbstand:Zahl<br>Gitterabstand des Koordinatensystems.
window.gridvisible         = $gitterSichtbar#gitterSichtbar:Wahrheitswert<br>Ist das Koordinatengitter sichtbar?

figure.verschieben         = @verschieben(dx,dy)#verschieben(dx:Zahl,dy:Zahl)<br>Verschiebt die Figur.
figure.strecken            = @strecken(faktor)#strecken(faktor:Zahl)<br>Streckt die Figur.
figure.verschiebennach     = @verschiebenNach(x,y)#verschiebenNach(x:Zahl,y:Zahl)<br>Verschiebt die Figur (Mittelpunkt) auf die Position.
figure.drehen              = @drehen(winkel)#drehen(winkel:Zahl)<br>Dreht die Figur gegen den Uhrzeigersinn.
figure.drehenan            = @drehenAn(x,y,winkel)#drehenAn(x:Zahl,y:Zahl,winkel:Zahl)<br>Dreht die Figur um den Punkt (x,y) gegen den Uhrzeigersinn.
figure.streckenan          = @streckenAn(x,y,faktor)#streckenAn(x:Zahl,y:Zahl,faktor:Zahl)<br>Streckt die Figur am Zentrum (x,y).
figure.sichtbarlesen       = @sichtbarkeitLesen()#sichtbarkeitLesen():Wahrheitswert<br>Liefert ob die Figur sichtbar ist.
figure.sichtbarsetzen      = @sichtbarSetzen(sichtbar)#sichtbarSetzen(sichtbar:Wahrheitswert)<br>Setzt die Sichtbarkeit einer Figur.
figure.xsetzen             = @xSetzen(x)#xSetzen(x:Zahl)<br>Setzt die x-Koordinate der Figur (Mittelpunkt).
figure.xlesen              = @xLesen()#xLesen():Zahl<br>Liefert die x-Koordinate des Figur (Mittelpunkt).
figure.ysetzen             = @ySetzen(y)#ySetzen(y:Zahl)<br>Setzt die y-Koordinate der Figur (Mittelpunkt).
figure.ylesen              = @yLesen()#yLesen():Zahl<br>Liefert die y-Koordinate des Figur (Mittelpunkt).
figure.sichtbar            = %sichtbar#sichtbar:Wahrheitswert<br>Ist die Figur sichtbar? 
figure.x                   = %x#x:Zahl<br>Die x-Koordinate der Figur (Mittelpunkt)
figure.y                   = %y#y:Zahl<br>Die y-Koordinate der Figur (Mittelpunkt)
figure.angle               = $winkel#winkel:Zahl<br>Winkel um den die Figur gedreht wurde.
figure.mirrored            = $gespiegelt#gespiegelt:Wahrheitswert<br>Ist die Figur gespiegelt?

filledfigure.f\u00fcllartsetzen  = @f\u00fcllartSetzen(art)#f\u00fcllartSetzen(art:F\u00fcllart)<br>Setzt die Art wie die Figur gef\u00fcllt wird.
filledfigure.f\u00fcllfarbesetzen = @f\u00fcllfarbeSetzen(farbe)#f\u00fcllfarbeSetzen(farbe:Farbe)<br>Setzt die Farbe mit der die Figur gef\u00fcllt wird.
filledfigure.f\u00fcllartlesen   = @f\u00fcllartLesen()#f\u00fcllartLesen():F\u00fcllart<br>Liefert die F\u00fcllart der Figur.
filledfigure.f\u00fcllfarbelesen = @f\u00fcllfarbeLesen()#f\u00fcllfarbeLesen()Farbe<br>Liefert die Farbe mit der die Figur gef\u00fcllt wird.
filledfigure.f\u00fcllart        = %f\u00fcllart#f\u00fcllart:F\u00fcllart<br>F\u00fcllart der Figur.
filledfigure.f\u00fcllfarbe      = %f\u00fcllfarbe#f\u00fcllfarbe:Farbe<br>F\u00fcllfarbe der Figur

group.randfarbesetzen     = @randfarbeSetzen(farbe)#randfarbeSetzen(farbe:Farbe)<br>Setzt die Randfarbe aller Figuren in der Gruppe.
group.randartsetzen       = @randartSetzen(art)#randartSetzen(art:Randart)<br>Setzt die Randart aller Figuren in der Gruppe.
group.randst\u00e4rkesetzen = @randst\u00e4rkeSetzen(st\u00e4rke)#randst\u00e4rkeSetzen(st\u00e4rke:Zahl)<br>Setzt die St\u00e4rke des Rands aller Figuren in der Gruppe.
group.f\u00fcllartsetzen  = @f\u00fcllartSetzen(art)#f\u00fcllartSetzen(art:F\u00fcllart)<br>Setzt die F\u00fcllart aller Figuren in der Gruppe.
group.f\u00fcllfarbesetzen = @f\u00fcllfarbeSetzen(farbe)#f\u00fcllfarbeSetzen(farbe:Farbe)<br>Setzt die F\u00fcllfarbe aller Figuren in der Gruppe.
group.schlucke            = @schlucke(figur)#schlucke(figur:Figur)<br>F\u00fcgt eine Figur in die Gruppe hinzu.
group.zentrumsetzen       = @zentrumSetzen(x,y)#zentrumSetzen(x:Zahl,y:Zahl)<br>Setzt den Mittelpunkt der Gruppe auf einen neuen Wert ohne die Figur zu verschieben. Dieser Wert ersetzt den Schwerpunkt.
group.kopiere             = @kopiere(figur)#kopiere(figur:Figur)<br>Erzeugt eine Kopie der Figur und f\u00fcgt die Kopie der Gruppe hinzu.
group.spieglex            = @spiegleX()#spiegleX()<br>Spiegelt die Gruppe an der y-Achse.
group.spiegley            = @spiegleY()#spiegleY()<br>Spiegelt die Gruppe an der x-Achse.
group.autocenter           = $zentrieren#zentrieren:Wahrheitswert<br>Verschiebt die Gruppe ihr Zentrum automatisch zum Schwerpunkt? 
group.members              = $teile#teile:Zahl<br>Anzahl der Figuren innerhalb der Gruppe.

circle.mitteysetzen        = @mitteYSetzen(y)#mitteYSetzen(y:Zahl)<br>Setzt die y-Koordinate des Mittelpunktes.
circle.mittexsetzen        = @mitteXSetzen(x)#mitteXSetzen(x:Zahl)<br>Setzt die x-Koordinate des Mittelpunktes.
circle.radiussetzen        = @radiusSetzen(radius)#radiusSetzen(radius:Zahl)<br>Setzt den Radius.
circle.mittelpunktsetzen   = @mittelpunktSetzen(x,y)#mittelpunktSetzen(x:Zahl,y:Zahl)<br>Setzt den Mittelpunkt des Kreises.
circle.mitteylesen         = @mitteYLesen()#mitteYLesen():Zahl<br>Liefert die y-Koordinate des Mittelpunktes.
circle.mittexlesen         = @mitteXLesen()#mitteXLesen():Zahl<br>Liefert die x-Koordinate des Mittelpunktes.
circle.radiuslesen         = @radiusLesen()#radiusLesen():Zahl<br>Liefert den Radius des Kreises.
circle.mittex              = %mitteX#mitteX:Zahl<br>x-Koordinate des Mittelpunkts des Kreises.
circle.mittey              = %mitteY#mitteY:Zahl<br>y-Koordinate des Mittelpunkts des Kreises.
circle.radius              = %radius#radius:Zahl<br>Radius des Kreises.

line.punkt1setzen        = @punkt1Setzen(x,y)#punkt1Setzen(x:Zahl,y:Zahl)<br>Setzt den ersten Punkt.
line.punkt2setzen        = @punkt2Setzen(x,y)#punkt2Setzen(x:Zahl,y:Zahl)<br>Setzt den zweiten Punkt.
line.endpunktesetzen     = @endpunkteSetzen(x1,y1,x2,y2)#endpunkteSetzen(x1:Zahl,y1:Zahl,x2:Zahl,y2:Zahl)<br>Setzt Anfang und Ende der Linie.
line.linienartsetzen     = @linienartSetzen(art)#linienartSetzen(art:LinienArt)<br>Setzt die Art der Linie.
line.linienartlesen      = @linienartLesen()#linienartLesen():LinienArt<br>Liefert die Art der Linie.
line.linienst\u00e4rkesetzen = @linienst\u00e4rkeSetzen(st\u00e4rke)#linienSt\u00e4rkeSetzen(st\u00e4rke:Zahl)<br>Setzt die St\u00e4rke der Linie.
line.linienst\u00e4rkelesen = @linienst\u00e4rkeLesen()#linienSt\u00e4rkeLesen():Zahl<br>Liefert die St\u00e4rke der Linie.
line.x1setzen            = @x1Setzen(x)#x1Setzen(x:Zahl)<br>Setzt die x-Koordinate des ersten Punktes.
line.x1lesen             = @x1Lesen()#x1Lesen():Zahl<br>Liefert die x-Koordinate des ersten Punktes.
line.x2setzen            = @x2Setzen(x)#x2Setzen(x:Zahl)<br>Setzt die x-Koordinate des zweiten Punktes.
line.x2lesen             = @x2Lesen()#x2Lesen():Zahl<br>Liefert die x-Koordinate des zweiten Punktes.
line.y1setzen            = @y1Setzen(y)#y1Setzen(y:Zahl)<br>Setzt die y-Koordinate des ersten Punktes.
line.y1lesen             = @y1Lesen()#y1Lesen():Zahl<br>Liefert die y-Koordinate des ersten Punktes.
line.y2setzen            = @y2Setzen(y)#y2Setzen(y:Zahl)<br>Setzt die y-Koordinate des zweiten Punktes.
line.y2lesen             = @y2Lesen()#y2Lesen():Zahl<br>Liefert die y-Koordinate des zweiten Punktes.
line.farbesetzen         = @farbeSetzen(farbe)#farbeSetzen(farbe:Farbe)<br>Setzt die Farbe der Linie.
line.farbelesen          = @farbeLesen()#farbeLesen():Farbe<br>Liefert die Farbe der Linie.
line.linienst\u00e4rke   = %linienSt\u00e4rke#linienSt\u00e4rke:Zahl<br>St\u00e4rke der Linie.
line.linienart           = %linienart#linienart:Linienart<br>Art der Linie.
line.farbe               = %farbe#farbe:Farbe<br>Farbe der Linie.
line.x1                  = %x1#x1:Zahl<br>x-Koordinate des ersten Punktes.
line.y1                  = %y1#y1:Zahl<br>y-Koordinate des ersten Punktes.
line.x2                  = %x2#x2:Zahl<br>x-Koordinate des zweiten Punktes.
line.y2                  = %y2#y2:Zahl<br>y-Koordinate des zweiten Punktes.

square.seitenl\u00e4ngesetzen = @seitenl\u00e4ngeSetzen(l\u00e4nge)#seitenl\u00e4ngeSetzen(l\u00e4nge:Zahl)<br>Setzt die Seitenl\u00e4nge.
square.linksobensetzen     = @linksObenSetzen(x,y)#linksObenSetzen(x:Zahl,y:Zahl)<br>Setzt die linke obere Ecke.
square.seitenl\u00e4ngelesen = @seitenl\u00e4ngeLesen()#seitenl\u00e4ngeLesen():Zahl<br>Liefert die Seitenl\u00e4nge.
square.seitenl\u00e4nge    = %seitenl\u00e4nge#seitenl\u00e4nge:Zahl<br>Seitenl\u00e4nge des Quadrats.

rectangle.h\u00f6hesetzen     = @h\u00f6heSetzen(h\u00f6he)#h\u00f6heSetzen(h\u00f6he:Zahl)<br>Setzt die H\u00f6he.
rectangle.breitesetzen        = @breiteSetzen(breite)#breiteSetzen(breite:Zahl)<br>Setzt die Breite.
rectangle.linkssetzen         = @linksSetzen(links)#linksSetzen(links:Zahl)<br>Setzt den linken Rand.
rectangle.rechtssetzen        = @rechtsSetzen(rechts)#rechtsSetzen(rechts:Zahl)<br>Setzt den rechten Rand.
rectangle.obensetzen          = @obenSetzen(oben)#obenSetzen(oben:Zahl)<br>Setzt den oberen Rand.
rectangle.untensetzen         = @untenSetzen(unten)#untenSetzen(unten:Zahl)<br>Setzt den unteren Rand.
rectangle.linksobensetzen     = @linksObenSetzen(links, oben)#linksObenSetzen(links:Zahl, oben:Zahl)<br>Setzt die linke obere Ecke.
rectangle.rechtsuntensetzen   = @rechtsUntenSetzen(rechts, unten)#rechtsUntenSetzen(rechts:Zahl, unten:Zahl)<br>Setzt die rechte untere Ecke.
rectangle.eckensetzen         = @eckenSetzen(links, oben, rechts, unten)#eckenSetzen(links:Zahl, oben:Zahl, rechts:Zahl, unten:Zahl)<br>Legt alle R\u00e4nder fest.
rectangle.h\u00f6helesen      = @h\u00f6heLesen()#h\u00f6heLesen():Zahl<br>Liefert die H\u00f6he.
rectangle.breitelesen         = @breiteLesen()#breiteLesen():Zahl<br>Liefert die Breite.
rectangle.linkslesen          = @linksLesen()#linksLesen():Zahl<br>Liefert den linken Rand.
rectangle.rechtslesen         = @rechtsLesen()#rechtsLesen():Zahl<br>Liefert den rechten Rand.
rectangle.obenlesen           = @obenLesen()#obenLesen():Zahl<br>Liefert den oberen Rand.
rectangle.untenlesen          = @untenLesen()#untenLesen():Zahl<br>Liefert den unteren Rand.
rectangle.h\u00f6he           = %h\u00f6he#h\u00f6he:Zahl<br>H\u00f6he des Rechtecks.
rectangle.breite              = %breite#breite:Zahl<br>Breite des Rechtecks.
rectangle.oben                = %oben#oben:Zahl<br>Oberer Rand des Rechtecks.
rectangle.links               = %links#links:Zahl<br>Linker Rand des Rechtecks.
rectangle.unten               = %unten#unten:Zahl<br>Unterer Rand des Rechtecks.
rectangle.rechts              = %rechts#rechts:Zahl<br>Rechter Rand des Rechtecks.

linefigure.randfarbesetzen     = @randfarbeSetzen(farbe)#randfarbeSetzen(farbe:Farbe)<br>Setzt die Farbe des Randes.
linefigure.randartsetzen       = @randartSetzen(art)#randartSetzen(art:Randart)<br>Setzt die Art des Randes.
linefigure.randst\u00e4rkesetzen = @randst\u00e4rkeSetzen(st\u00e4rke)#randfarbeSetzen(st\u00e4rke:Zahl)<br>Setzt die St\u00e4rke des Randes.
linefigure.randfarbelesen      = @randfarbeLesen()#randfarbeLesen():Farbe<br>Liefert die Farbe des Randes.
linefigure.randartlesen        = @randartLesen()#randartLesen():Randart<br>Liefert die Art des Randes.
linefigure.randst\u00e4rkelesen = @randst\u00e4rkeLesen()#randst\u00e4rkeLesen():Zahl<br>Liefert die St\u00e4rke des Randes.
linefigure.randfarbe           = %randfarbe#randfarbe:Farbe<br>Farbe des Randes.
linefigure.randart             = %randart#randart:Randart<br>Art des Randes.
linefigure.randst\u00e4rke     = %randst\u00e4rke#randst\u00e4rke:Zahl<br>St\u00e4rke des Randes.

textfield.schriftfarbesetzen  = @schriftfarbeSetzen(farbe)#schriftfarbeSetzen(farbe:Farbe)<br>Legt die Farbe der Schrift fest.
textfield.schriftgr\u00f6\u00dfesetzen = @schriftgr\u00f6\u00dfeSetzen(schriftgr\u00f6\u00dfe)#schriftgr\u00f6\u00dfeSetzen(schriftgr\u00f6\u00dfe:Zahl)<br>Legt die Schriftgr\u00f6\u00dfe fest.
textfield.schriftartsetzen    = @schriftartSetzen(schriftart)#schriftartSetzen(schriftart:Zeichenkette)<br>Legt die Schriftart fest.
textfield.ausrichtungvertikalsetzen = @ausrichtungVertikalSetzen(ausrichtung)#ausrichtungVertikalSetzen(ausrichtung:Ausrichtung)<br>Legt die vertikale Ausrichtung fest.
textfield.gr\u00f6\u00dfeautomatischanpassensetzen = @gr\u00f6\u00dfeAutomatischAnpassenSetzen(auto)#gr\u00f6\u00dfeAutomatischAnpassenSetzen(auto:Wahrheitswert)<br>Legt fest ob das Rechteck automatisch an den Text angepasst wird.
textfield.ausrichtunghorizontalsetzen = @ausrichtungHorizontalSetzen(ausrichtung)#ausrichtungHorizontalSetzen(ausrichtung:Ausrichtung)<br>Legt die horizontale Ausrichtung fest.
textfield.zeilehinzuf\u00fcgen = @zeileHinzuf\u00fcgen(zeile)#zeileHinzuf\u00fcgen(zeile:Zeichenkette)<br>Erg\u00e4nzt eine neue Zeile im Text.
textfield.zeilel\u00f6schen   = @zeileL\u00f6schen()#zeileL\u00f6schen()<br>L\u00f6scht die letzte Zeile des Textes.
textfield.schriftfarbelesen   = @schriftfarbeLesen()#schriftfarbeLesen():Farbe<br>Liefert die Farbe der Schrift.
textfield.schriftgr\u00f6\u00dfelesen = @schriftgr\u00f6\u00dfeLesen()#schriftgr\u00f6\u00dfeLesen():Zahl<br>Liefert die Gr\u00f6\u00dfe der Schrift.
textfield.schriftartlesen     = @schriftartLesen()#schriftartLesen():Zeichenkette<br>Liefert die Schriftart.
textfield.ausrichtungvertikallesen = @ausrichtungVertikalLesen()#ausrichtungVertikalLesen():Ausrichtung<br>Liefert die vertikale Ausrichtung.
textfield.gr\u00f6\u00dfeautomatischanpassenlesen = @gr\u00f6\u00dfeAutomatischAnpassenLesen()#gr\u00f6\u00dfeAutomatischAnpassenLesen():Wahrheitswert<br>Liefert ob die Gr\u00f6\u00dfe des Rechtecks automatisch an den Text angepasst wird.
textfield.ausrichtundhorizontallesen = @ausrichtungHorizontalLesen()#ausrichtungHorizontalLesen():Ausrichtung<br>Liefert die horizontale Ausrichtung.
textfield.durchsichtigsetzen  = @durchsichtigSetzen(durchsichtig)#durchsichtigSetzen(durchsichtig:Wahrheitswert)<br>Legt fest ob das Rechteck gezeichnet werden soll oder nur der Text.
textfield.durchsichtiglesen   = @durchsichtigLesen()#durchsichtigLesen():Wahrheitswert<br>Liefert ob das Textfeld durchsichtig ist.
textfield.schriftfarbe        = %schriftfarbe#schriftfarbe:Farbe<br>Farbe der Schrift.
textfield.schriftgr\u00f6\u00dfe = %schriftgr\u00f6\u00dfe#schriftgr\u00f6\u00dfe:Zahl<br>Gr\u00f6\u00dfe der Schrift.
textfield.schriftart          = %schriftart#schriftart:Zeichenkette<br>Schriftart.
textfield.ausrichtungvertikal = %ausrichtungVertikal#ausrichtungVertikal:Ausrichtung<br>Vertikale Ausrichtung des Textes.
textfield.ausrichtungHorizontal = %ausrichtungHorizontal#ausrichtungHorizontal:Ausrichtung<br>Horizontale Ausrichtung des Textes.
textfield.gr\u00f6\u00dfeautomatischanpassen = %gr\u00f6\u00dfeAutomatischAnpassen#gr\u00f6\u00dfeAutomatischAnpassen:Wahrheitswert<br>Automatische Anpassung des Rechtecks an den Text.
textfield.durchsichtig        = %durchsichtig#durchsichtig:Wahrheitswert<br>Ist das Textfeld durchsichtig?
textfield.text                = $text#text:Zeichenkette<br>Text.

grafic.ladebild            = @ladeBild(dateiname)#ladeBild(dateiname:Zeichenkette)<br>L\u00e4dt das Hintergrundbild.
grafic.bildstrecken        = @bildStrecken()#bildStrecken()<br>Das Bild wird auf das Rechteck gestreckt. Das Bild wird verzerrt.
grafic.bildabschneiden     = @bildAbschneiden()#bildAbschneiden()<br>Das Bild wird \u00fcber das Rechteck gelegt. Wobei Teile des Bildes nicht genutzt werden. 
grafic.bildeinpassen       = @bildEinpassen()#bildEinpassen()<br> Das Bild wird so gro\u00dfe wie m\u00f6glich bis es den Rand erreicht. Das Rechteck wird nicht vollst\u00e4ndig bedeckt.
grafic.skalierung          = $skalierung#skalierung:F\u00fc"llmodus<br>Legt fest wie das Rechteck mit dem Bild gef\u00fcllt wird. 
grafic.bild                = $bild#bild:Zeichenkette<br>Name des Bilddatei.

plotter.stiftab             = @stiftAb()#stiftAb()<br>Startet einen Zeichenvorgang.
plotter.stiftauf            = @stiftAuf()#stiftAuf()<br>Beendet einen Zeichenvorgang.
plotter.linksdrehen         = @linksDrehen(winkel)#linksDrehen(winkel:Zahl)<br>Dreht den Stift nach links.
plotter.rechtsdrehen        = @rechtsDrehen(winkel)#rechtsDrehen(winkel:Zahl)<br>Dreht den Stift nach rechts.
plotter.links               = @links(winkel)#links(winkel:Zahl)<br>Dreht den Stift nach links.
plotter.rechts              = @rechts(winkel)#rechts(winkel:Zahl)<br>Dreht den Stift nach rechts.
plotter.setzeturtlexy       = @setzeTurtleXY(x,y)#setzeTurtleXY(x:Zahl,y:Zahl)<br>Bewegt den Stift zur Position.
plotter.zur\u00fcck         = @zur\u00fcck(abstand)#zur\u00fcck(abstand:Zahl)<br>Bewegt den Stift r\u00fcckw\u00e4rts.
plotter.vor                 = @vor(abstand)#vor(abstand:Zahl)<br>Bewegt den Stift vorw\u00e4rts.
plotter.farbesetzen         = @farbeSetzen(farbe)#farbeSetzen(farbe:Farbe)<br>Setzt die Farbe in der gemalt wird.
plotter.farbelesen          = @farbeLesen()#farbeLesen():Farbe<br>Liefert die Farbe in der gemalt wird.
plotter.turtlexsetzen       = @turtleXSetzen(x)#turtleXSetzen(x:Zahl)<br>Setzt die x-Koordinate des Stiftes.
plotter.turtlexlesen        = @turtleXLesen()#turtleXLesen():Zahl<br>Liefert die x-Koordinate des Stiftes.
plotter.turtleysetzen       = @turtleYSetzen(y)#turtleYSetzen(y:Zahl)<br>Setzt die y-Koordinate des Stiftes.
plotter.turtleylesen        = @turtleYLesen()#turtleYLesen():Zahl<br>Liefert die y-Koordinate des Stiftes.
plotter.kurssetzen          = @kursSetzen(winkel)#kursSetzen(winkel:Zahl)<br>Legt die Bwegungsrichtung des Stiftes fest.
plotter.kurslesen           = @kursLesen()#kursLesen():Zahl<br>Liefert den Winkel der Richtung in die sich der Stift bewegt.
plotter.turtlesichtbarsetzen = @turtleSichtbarSetzen(sichtbar)#turtleSichtbarSetzen(sichtbar:Wahrheitswert)<br>Legt fest ob der Stift angezeigt wird.
plotter.turtlesichtbarlesen = @turtleSichtbarLesen()#turtleSichtbarLesen():Wahrheitswert<br>Liefert ob der Stift angezeigt wird.
plotter.linienst\u00e4rkesetzen = @linienst\u00e4rkeSetzen(st\u00e4rke)#linienst\u00e4rkeSetzen(st\u00e4rke:Zahl)<br>Setzt die St\u00e4rke der zu zeichnenden Linie.
plotter.linienartsetzen      = @linienartSetzen(art)#linienartSetzen(art:Linienart)<br>Setzt die Art der Linie.
plotter.f\u00fcllartsetzen   = @f\u00fcllartSetzen(art)#f\u00fcllartSetzen(art:F\u00fcllart)<br>Setzt die Art wie das aktuelle Polygon gef\u00fcllt wird.
plotter.f\u00fcllfarbesetzen = @f\u00fcllfarbeSetzen(farbe)#f\u00fcllfarbeSetzen(farbe:Farbe)<br>Setzt die Farbe mit der die Figur gef\u00fcllt wird.
plotter.zentrumsetzen       = @zentrumSetzen(x,y)#zentrumSetzen(x:Zahl,y:Zahl)<br>Setzt den Mittelpunkt der Gruppe auf einen neuen Wert ohne die Figur zu verschieben. Dieser Wert ersetzt den Schwerpunkt.
plotter.turtlex             = %x#x:Zahl<br>x-Koordinate des Stiftes
plotter.turtley             = %y#y:Zahl<br>y-Koordinate des Stiftes
plotter.kurs                = %kurs#kurs:Zahl<br>Bewegungsrichtung des Stiftes in Grad.
plotter.turtlesichtbar      = %turtleSichtbar#turtleSichtbar:Wahrheitswert<br>Ist der Stift sichtbar?
plotter.stiftunten          = $stiftunten#stiftunten:Wahrheitswert<br>Wird gerade gezeichnet?
plotter.stiftfarbe          = $stiftfarbe#stiftfarbe:Farbe<br>Zeichenfarbe.
